sudo: required
dist: trusty

env:
  - BUILD_IMAGE=bionic
  - BUILD_IMAGE=xenial
  - BUILD_IMAGE=trusty
  - BUILD_IMAGE=centos7
  - BUILD_IMAGE=rhel7
  - BUILD_IMAGE=alpine3.6
  - BUILD_IMAGE=alpine3.7
  - BUILD_IMAGE=alpine3.8

language: generic

services:
    - docker

before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L "https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-$(uname -s)-$(uname -m)" -o docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - mkdir -p build/deb/trusty build/deb/xenial build/deb/bionic build/rpm/CentOS/7/x86_64 build/rpm/RHEL/7/x86_64 build/alpine/v3.6/x86_64 build/alpine/v3.7/x86_64 build/alpine/v3.8/x86_64

script:
  - if [ -n "$TRAVIS_TAG" ]; then export VERSION=$( cut -d '-' -f 1 <<< "$TRAVIS_TAG" ) export RELEASEVER=$( cut -d '-' -f 2 <<< "$TRAVIS_TAG" ); echo "Setting versions via TravisCI Tag"; fi
  - VERSION=$VERSION RELEASEVER=$RELEASEVER docker-compose run $BUILD_IMAGE
  - if [ "$BUILD_IMAGE" == "trusty" ] || [ "$BUILD_IMAGE" == "xenial" ] || [ "$BUILD_IMAGE" == "bionic" ]; then mv *$BUILD_IMAGE*.deb build/deb/$BUILD_IMAGE; fi
  - if [ "$BUILD_IMAGE" == "centos7" ]; then mv *.rpm build/rpm/CentOS/7/x86_64; fi
  - if [ "$BUILD_IMAGE" == "rhel7" ]; then mv *.rpm build/rpm/RHEL/7/x86_64; fi
  - if [ "$BUILD_IMAGE" == "alpine3.6" ]; then mv *.apk build/alpine/v3.6/x86_64; fi
  - if [ "$BUILD_IMAGE" == "alpine3.7" ]; then mv *.apk build/alpine/v3.7/x86_64; fi
  - if [ "$BUILD_IMAGE" == "alpine3.8" ]; then mv *.apk build/alpine/v3.8/x86_64; fi

deploy:
  provider: s3
  access_key_id: AKIAINRCDYGMMTSHTIHA
  bucket: travis-packages.erianna.com
  detect_encoding: true
  skip_cleanup: true
  acl: public_read
  region: us-west-2
  local_dir: build
  on:
    tags: true
    all_branches: false
    repo: charlesportwoodii/nginx-build
  secret_access_key:
    secure: aF+F2o3c/LDHyJGcpsjZNg5CWb1sjSyPaO6gZMHtedxgJqPLeBr9PeucZwGLPeD2dbVKn9aJ0Js6icF3uwUR7NPB7LImNoLbcxRf2wq5GOfvL81JBpe0/Vo7dwQxuecm/2QBSB0ZBs80DaFeVz/ATpYuCs9US4ui5/l5HiM1Nwtp/PyMtBxCwhfSEUJjcWjXTiqUmgH9fcVpCkLcudUKKEi4pggrEKlNLwi8D+bduYfGs2/dxlFDqFpERixtk1u8bITZCud/oUzbYsGj7k9jdZeMgUKGvfCGz2homTthAVZ+3YCfR0CKE+/vS0qOSKtE4l43kjirbpXuJmRHJ0QrOEeMdoELjfEmGBK3997S25v6wgYsfmNl6uvNw5L5IxrqEWWop9zLSQst2DWIxRY20cm99jPEmFXqUI2rTiEVUfuLtF9yYJtXRwCpKncQSLuXB7VEbZXmy/j0wRFbfkcH9vV3ZnS1ppXM5rks3D2xc3K7T6D9sNGxWF/e+o/oECll7J2e94GwcyqBSBZhiLTG68YrwMDp7mtEf46Qo8bYpBgPQkW+iUxUbjGVIlSy3+GDF4yTabg5uxDqDZLkDS4aNr60CtPR8iiagO5j7e42TeC0wQk+wu3n8JSKMsIkELQwIYpdisTt1YA/6x7WBdYPOz5W253wc9HbSFJgzC0hLFM=
