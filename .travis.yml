sudo: required
dist: bionic

env:
  global:
    - AWS_ACCESS_KEY_ID=XZQSNWFHKYPQDESUJSTT
    - AWS_HOST=nyc3.digitaloceanspaces.com
    - AWS_BUCKET=com-erianna-travis
    - AWS_HOST_BUCKET="$AWS_BUCKET-$AWS_HOST"
  jobs:
    - BUILD_IMAGE=focal BUILD_OS=Ubuntu BUILD_OS_VERSION=20.04
    - BUILD_IMAGE=bionic BUILD_OS=Ubuntu BUILD_OS_VERSION=18.04
    - BUILD_IMAGE=xenial BUILD_OS=Ubuntu BUILD_OS_VERSION=16.04
    - BUILD_IMAGE=trusty BUILD_OS=Ubuntu BUILD_OS_VERSION=14.04
    - BUILD_IMAGE=centos7 BUILD_OS=CentOS BUILD_OS_VERSION=7
    - BUILD_IMAGE=rhel7 BUILD_OS=RHEL BUILD_OS_VERSION=7
    - BUILD_IMAGE=alpine3.7 BUILD_OS=Alpine BUILD_OS_VERSION=3.7
    - BUILD_IMAGE=alpine3.8 BUILD_OS=Alpine BUILD_OS_VERSION=3.8
    - BUILD_IMAGE=alpine3.9 BUILD_OS=Alpine BUILD_OS_VERSION=3.9
    - BUILD_IMAGE=alpine3.11 BUILD_OS=Alpine BUILD_OS_VERSION=3.11

language: generic
services:
  - docker

before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L "https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-$(uname -s)-$(uname -m)" -o docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - if [ "$BUILD_OS" == "Ubuntu" ]; then mkdir -p build/deb/$BUILD_IMAGE; fi
  - if [ "$BUILD_OS" == "Alpine" ]; then mkdir -p build/alpine/v$BUILD_OS_VERSION/x86_64; fi
  - if [ "$BUILD_OS" == "CentOS" ] || [ "$BUILD_OS" == "RHEL" ]; then mkdir -p build/rpm/$BUILD_OS/$BUILD_OS_VERSION/x86_64; fi

script:
  - if [ -n "$TRAVIS_TAG" ]; then export VERSION=$( cut -d '-' -f 1 <<< "$TRAVIS_TAG" ) export RELEASEVER=$( cut -d '-' -f 2 <<< "$TRAVIS_TAG" ); echo "Setting versions via TravisCI Tag"; fi
  - docker-compose run $BUILD_IMAGE
  - if [ "$BUILD_OS" == "Ubuntu" ]; then mv *$BUILD_IMAGE*.deb build/deb/$BUILD_IMAGE; fi
  - if [ "$BUILD_OS" == "Alpine" ]; then mv *.apk build/alpine/v$BUILD_OS_VERSION/x86_64; fi
  - if [ "$BUILD_OS" == "CentOS" ] || [ "$BUILD_OS" == "RHEL" ]; then mv *.rpm build/rpm/$BUILD_OS/$BUILD_OS_VERSION/x86_64; fi

deploy:
  provider: s3
  access_key_id: $AWS_ACCESS_KEY_ID
  secret_access_key:
    secure: SeNHJBM59clvH6iEcY8xsmE0zYioQulMe/4nCebPcbLx+Rq+HZqJOMsGc12N0FRx22zufujt4cKzXkHel4uLiqppLOw1uoyBA7wAQ1npSnJQsZmVnngD3PgbS+qP5g+B50y4KyIDaNkL6JINz57JMq00bLF/gJiNB/v4b/AGk2w=
  bucket: $AWS_BUCKET
  local-dir: build
  skip_cleanup: true
  detect_encoding: true
  endpoint: https://$AWS_HOST
  on:
    tags: true
    all_branches: false
    repo: charlesportwoodii/nginx-build